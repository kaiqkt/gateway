version: '2'
services:
  mongodb:
    container_name: mongodb
    image: mongo:3
    restart: always
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_DATABASE: "mongodb"
      MONGO_INITDB_ROOT_USERNAME: "mongodb"
      MONGO_INITDB_ROOT_PASSWORD: "mongodb"
    volumes:
      - mongodb:/data/db
    networks:
      - service-network
  redis:
    container_name: redis
    image: redis:latest
    restart: always
    command: redis-server --save 20 1 --loglevel warning --requirepass 'redis'
    volumes:
      - redis:/data/cache
    networks:
     - service-network
  localstack:
    container_name: localstack
    image: localstack/localstack
    environment:
      - SERVICES=sqs
      - AWS_DEFAULT_REGION=us-east-1
      - AWS_SECRET_ACCESS_KEY=123secret
      - AWS_ACCESS_KEY_ID=123secret
      - DEBUG=1
      - DATA_DIR=/var/lib/localstack/data
    command: sh ./localstack/init-localstack.sh
    volumes:
      - ./localstack:/etc/localstack/init/ready.d
      - ./localstack/storage:/var/lib/localstack
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - service-network
  authorization-service:
    depends_on:
      - mongodb
      - redis
    container_name: authorization-service
    image: authorization-service
    environment:
      MONGO_HOST: mongodb
      MONGO_PORT: 27017
      MONGO_USERNAME: mongodb
      MONGO_PASSWORD: mongodb
      MONGO_DATABASE: mongodb
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_PASSWORD: redis
      SERVICE_SECRET: world
      CUSTOMER_SECRET: world
      SESSION_EXPIRATION: 2
      REDEFINE_PASSWORD_CODE_EXPIRATION: 2
      CUSTOMER_TOKEN_EXPIRATION: 2
      COMMUNICATION_URL: http://communication-service:8080
      COMMUNICATION_SERVICE_SHARED: world
      COMMUNICATION_LOCATION_EMAIL_TEMPLATE: communication-d-1/emails/
      PASSWORD_REDEFINE_TEMPLATE: redefine-password.html
      PASSWORD_UPDATED_TEMPLATE: password-updated.html
      WELCOME_TEMPLATE: welcome.html
      NEW_ACCESS_TEMPLATE: new-access.html
      COMMUNICATION_LOCATION_SMS_TEMPLATE: communication-d-1/sms/
      PASSWORD_REDEFINE_SMS_TEMPLATE: redefine-password.txt
    networks:
      - service-network
  communication-service:
    depends_on:
      - localstack
      - mongodb
      - redis
    container_name: communication-service
    image: communication-service
    environment:
      MAIL_HOST: smtp.gmail.com
      MAIL_USERNAME:
      MAIL_PASSWORD:
      MONGO_HOST: mongodb
      MONGO_PORT: 27017
      MONGO_USERNAME: mongodb
      MONGO_PASSWORD: mongodb
      MONGO_DATABASE: mongodb
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_PASSWORD: redis
      AWS_ACCESS_KEY: 123secret
      AWS_SECRET_KEY: 123secret
      AWS_REGION: us-east-1
      AWS_SQS_ENDPOINT: http://localstack:4566/000000000000/
      AWS_S3_ENDPOINT: http://localstack:4566/
      AWS_SQS_EMAIL_QUEUE_NAME: communication-sqs-email
      AWS_SQS_SMS_QUEUE_NAME: communication-sqs-sms
      TWILIO_ACCOUNT_SID:
      TWILIO_AUTH_TOKEN:
      TWILIO_SENDER_PHONE:
      TWILIO_URL: https://api.twilio.com/2010-04-01
      SERVICE_SECRET: world
      CUSTOMER_AUTH_SECRET: world
    networks:
      - service-network
  gateway-service:
    depends_on:
      - communication-service
      - authorization-service
    container_name: gateway-service
    ports:
      - "8080:8080"
    image:   gateway-service
    environment:
      AUTHORIZATION-REGISTRY-URL: http://authorization-service:8080
      COMMUNICATION-SERVICE-URL: http://communication-service:8080
    networks:
      - service-network

networks:
  service-network:
    driver: bridge

volumes:
  mongodb:
    driver: local
  redis:
    driver: local
  communication-service:
    driver: local
  authorization-service:
    driver: local
  localstack:
    driver: local